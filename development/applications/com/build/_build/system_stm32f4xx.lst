ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw"
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 0024F400 		.word	16000000
  24              		.global	AHBPrescTable
  25              		.section	.rodata.AHBPrescTable,"a"
  26              		.align	2
  29              	AHBPrescTable:
  30 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  30      00000000 
  30      01020304 
  30      06
  31 000d 070809   		.ascii	"\007\010\011"
  32              		.global	APBPrescTable
  33              		.section	.rodata.APBPrescTable,"a"
  34              		.align	2
  37              	APBPrescTable:
  38 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  38      01020304 
  39              		.section	.text.SystemInit,"ax",%progbits
  40              		.align	1
  41              		.global	SystemInit
  42              		.arch armv7e-m
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemInit:
  49              	.LFB130:
  50              		.file 1 "../src/system_stm32f4xx.c"
   1:../src/system_stm32f4xx.c **** /**
   2:../src/system_stm32f4xx.c ****   ******************************************************************************
   3:../src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:../src/system_stm32f4xx.c ****   *
   7:../src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:../src/system_stm32f4xx.c ****   *   user application:
   9:../src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:../src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 2


  11:../src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  12:../src/system_stm32f4xx.c ****   *
  13:../src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:../src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick
  15:../src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  16:../src/system_stm32f4xx.c ****   *
  17:../src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:../src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  19:../src/system_stm32f4xx.c ****   *                                 during program execution.
  20:../src/system_stm32f4xx.c ****   *
  21:../src/system_stm32f4xx.c ****   *
  22:../src/system_stm32f4xx.c ****   ******************************************************************************
  23:../src/system_stm32f4xx.c ****   * @attention
  24:../src/system_stm32f4xx.c ****   *
  25:../src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2017 STMicroelectronics</center></h2>
  26:../src/system_stm32f4xx.c ****   *
  27:../src/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  28:../src/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  29:../src/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  30:../src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
  31:../src/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  32:../src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  33:../src/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  34:../src/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  35:../src/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  36:../src/system_stm32f4xx.c ****   *      without specific prior written permission.
  37:../src/system_stm32f4xx.c ****   *
  38:../src/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  39:../src/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  40:../src/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  41:../src/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  42:../src/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  43:../src/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  44:../src/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  45:../src/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  46:../src/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  47:../src/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  48:../src/system_stm32f4xx.c ****   *
  49:../src/system_stm32f4xx.c ****   ******************************************************************************
  50:../src/system_stm32f4xx.c ****   */
  51:../src/system_stm32f4xx.c **** 
  52:../src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  53:../src/system_stm32f4xx.c ****   * @{
  54:../src/system_stm32f4xx.c ****   */
  55:../src/system_stm32f4xx.c **** 
  56:../src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  57:../src/system_stm32f4xx.c ****   * @{
  58:../src/system_stm32f4xx.c ****   */
  59:../src/system_stm32f4xx.c **** 
  60:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  61:../src/system_stm32f4xx.c ****   * @{
  62:../src/system_stm32f4xx.c ****   */
  63:../src/system_stm32f4xx.c **** 
  64:../src/system_stm32f4xx.c **** 
  65:../src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  66:../src/system_stm32f4xx.c **** 
  67:../src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE)
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 3


  68:../src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  69:../src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  70:../src/system_stm32f4xx.c **** 
  71:../src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  72:../src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  73:../src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  74:../src/system_stm32f4xx.c **** 
  75:../src/system_stm32f4xx.c **** /**
  76:../src/system_stm32f4xx.c ****   * @}
  77:../src/system_stm32f4xx.c ****   */
  78:../src/system_stm32f4xx.c **** 
  79:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  80:../src/system_stm32f4xx.c ****   * @{
  81:../src/system_stm32f4xx.c ****   */
  82:../src/system_stm32f4xx.c **** 
  83:../src/system_stm32f4xx.c **** /**
  84:../src/system_stm32f4xx.c ****   * @}
  85:../src/system_stm32f4xx.c ****   */
  86:../src/system_stm32f4xx.c **** 
  87:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  88:../src/system_stm32f4xx.c ****   * @{
  89:../src/system_stm32f4xx.c ****   */
  90:../src/system_stm32f4xx.c **** 
  91:../src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  92:../src/system_stm32f4xx.c **** 
  93:../src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  94:../src/system_stm32f4xx.c ****      Internal SRAM. */
  95:../src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
  96:../src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field.
  97:../src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
  98:../src/system_stm32f4xx.c **** /******************************************************************************/
  99:../src/system_stm32f4xx.c **** 
 100:../src/system_stm32f4xx.c **** /**
 101:../src/system_stm32f4xx.c ****   * @}
 102:../src/system_stm32f4xx.c ****   */
 103:../src/system_stm32f4xx.c **** 
 104:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 105:../src/system_stm32f4xx.c ****   * @{
 106:../src/system_stm32f4xx.c ****   */
 107:../src/system_stm32f4xx.c **** 
 108:../src/system_stm32f4xx.c **** /**
 109:../src/system_stm32f4xx.c ****   * @}
 110:../src/system_stm32f4xx.c ****   */
 111:../src/system_stm32f4xx.c **** 
 112:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 113:../src/system_stm32f4xx.c ****   * @{
 114:../src/system_stm32f4xx.c ****   */
 115:../src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 116:../src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 117:../src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 118:../src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 119:../src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 120:../src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 121:../src/system_stm32f4xx.c ****                variable is updated automatically.
 122:../src/system_stm32f4xx.c ****   */
 123:../src/system_stm32f4xx.c **** uint32_t SystemCoreClock = 16000000;
 124:../src/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 4


 125:../src/system_stm32f4xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 126:../src/system_stm32f4xx.c **** /**
 127:../src/system_stm32f4xx.c ****   * @}
 128:../src/system_stm32f4xx.c ****   */
 129:../src/system_stm32f4xx.c **** 
 130:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 131:../src/system_stm32f4xx.c ****   * @{
 132:../src/system_stm32f4xx.c ****   */
 133:../src/system_stm32f4xx.c **** 
 134:../src/system_stm32f4xx.c **** /**
 135:../src/system_stm32f4xx.c ****   * @}
 136:../src/system_stm32f4xx.c ****   */
 137:../src/system_stm32f4xx.c **** 
 138:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 139:../src/system_stm32f4xx.c ****   * @{
 140:../src/system_stm32f4xx.c ****   */
 141:../src/system_stm32f4xx.c **** 
 142:../src/system_stm32f4xx.c **** /**
 143:../src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 144:../src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory
 145:../src/system_stm32f4xx.c ****   *         configuration.
 146:../src/system_stm32f4xx.c ****   * @param  None
 147:../src/system_stm32f4xx.c ****   * @retval None
 148:../src/system_stm32f4xx.c ****   */
 149:../src/system_stm32f4xx.c **** void SystemInit(void)
 150:../src/system_stm32f4xx.c **** {
  51              		.loc 1 150 1
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 1, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56 0000 80B4     		push	{r7}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 4
  59              		.cfi_offset 7, -4
  60 0002 00AF     		add	r7, sp, #0
  61              	.LCFI1:
  62              		.cfi_def_cfa_register 7
 151:../src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 152:../src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 153:../src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  63              		.loc 1 153 16
  64 0004 164B     		ldr	r3, .L2
  65 0006 D3F88830 		ldr	r3, [r3, #136]
  66 000a 154A     		ldr	r2, .L2
  67 000c 43F47003 		orr	r3, r3, #15728640
  68 0010 C2F88830 		str	r3, [r2, #136]
 154:../src/system_stm32f4xx.c ****   #endif
 155:../src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 156:../src/system_stm32f4xx.c ****   /* Set HSION bit */
 157:../src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  69              		.loc 1 157 11
  70 0014 134B     		ldr	r3, .L2+4
  71 0016 1B68     		ldr	r3, [r3]
  72 0018 124A     		ldr	r2, .L2+4
  73 001a 43F00103 		orr	r3, r3, #1
  74 001e 1360     		str	r3, [r2]
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 5


 158:../src/system_stm32f4xx.c **** 
 159:../src/system_stm32f4xx.c ****   /* Reset CFGR register */
 160:../src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  75              		.loc 1 160 6
  76 0020 104B     		ldr	r3, .L2+4
  77              		.loc 1 160 13
  78 0022 0022     		movs	r2, #0
  79 0024 9A60     		str	r2, [r3, #8]
 161:../src/system_stm32f4xx.c **** 
 162:../src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 163:../src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  80              		.loc 1 163 11
  81 0026 0F4B     		ldr	r3, .L2+4
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 0E4A     		ldr	r2, .L2+4
  84 002c 23F08473 		bic	r3, r3, #17301504
  85 0030 23F48033 		bic	r3, r3, #65536
  86 0034 1360     		str	r3, [r2]
 164:../src/system_stm32f4xx.c **** 
 165:../src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 166:../src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  87              		.loc 1 166 6
  88 0036 0B4B     		ldr	r3, .L2+4
  89              		.loc 1 166 16
  90 0038 0B4A     		ldr	r2, .L2+8
  91 003a 5A60     		str	r2, [r3, #4]
 167:../src/system_stm32f4xx.c **** 
 168:../src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 169:../src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  92              		.loc 1 169 11
  93 003c 094B     		ldr	r3, .L2+4
  94 003e 1B68     		ldr	r3, [r3]
  95 0040 084A     		ldr	r2, .L2+4
  96 0042 23F48023 		bic	r3, r3, #262144
  97 0046 1360     		str	r3, [r2]
 170:../src/system_stm32f4xx.c **** 
 171:../src/system_stm32f4xx.c ****   /* Disable all interrupts */
 172:../src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
  98              		.loc 1 172 6
  99 0048 064B     		ldr	r3, .L2+4
 100              		.loc 1 172 12
 101 004a 0022     		movs	r2, #0
 102 004c DA60     		str	r2, [r3, #12]
 173:../src/system_stm32f4xx.c **** 
 174:../src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 175:../src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 176:../src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 177:../src/system_stm32f4xx.c **** #else
 178:../src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 103              		.loc 1 178 6
 104 004e 044B     		ldr	r3, .L2
 105              		.loc 1 178 13
 106 0050 4FF00062 		mov	r2, #134217728
 107 0054 9A60     		str	r2, [r3, #8]
 179:../src/system_stm32f4xx.c **** #endif
 180:../src/system_stm32f4xx.c **** }
 108              		.loc 1 180 1
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 6


 109 0056 00BF     		nop
 110 0058 BD46     		mov	sp, r7
 111              	.LCFI2:
 112              		.cfi_def_cfa_register 13
 113              		@ sp needed
 114 005a 5DF8047B 		ldr	r7, [sp], #4
 115              	.LCFI3:
 116              		.cfi_restore 7
 117              		.cfi_def_cfa_offset 0
 118 005e 7047     		bx	lr
 119              	.L3:
 120              		.align	2
 121              	.L2:
 122 0060 00ED00E0 		.word	-536810240
 123 0064 00380240 		.word	1073887232
 124 0068 10300024 		.word	603992080
 125              		.cfi_endproc
 126              	.LFE130:
 128              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 129              		.align	1
 130              		.global	SystemCoreClockUpdate
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv4-sp-d16
 136              	SystemCoreClockUpdate:
 137              	.LFB131:
 181:../src/system_stm32f4xx.c **** 
 182:../src/system_stm32f4xx.c **** /**
 183:../src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 184:../src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 185:../src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 186:../src/system_stm32f4xx.c ****   *         other parameters.
 187:../src/system_stm32f4xx.c ****   *
 188:../src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 189:../src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 190:../src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.
 191:../src/system_stm32f4xx.c ****   *
 192:../src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real
 193:../src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 194:../src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 195:../src/system_stm32f4xx.c ****   *
 196:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 197:../src/system_stm32f4xx.c ****   *
 198:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 199:../src/system_stm32f4xx.c ****   *
 200:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 201:../src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 202:../src/system_stm32f4xx.c ****   *
 203:../src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 204:../src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 205:../src/system_stm32f4xx.c ****   *             in voltage and temperature.
 206:../src/system_stm32f4xx.c ****   *
 207:../src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 208:../src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 209:../src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 210:../src/system_stm32f4xx.c ****   *              may have wrong result.
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 7


 211:../src/system_stm32f4xx.c ****   *
 212:../src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 213:../src/system_stm32f4xx.c ****   *           value for HSE crystal.
 214:../src/system_stm32f4xx.c ****   *
 215:../src/system_stm32f4xx.c ****   * @param  None
 216:../src/system_stm32f4xx.c ****   * @retval None
 217:../src/system_stm32f4xx.c ****   */
 218:../src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 219:../src/system_stm32f4xx.c **** {
 138              		.loc 1 219 1
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 24
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143 0000 80B4     		push	{r7}
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 4
 146              		.cfi_offset 7, -4
 147 0002 87B0     		sub	sp, sp, #28
 148              	.LCFI5:
 149              		.cfi_def_cfa_offset 32
 150 0004 00AF     		add	r7, sp, #0
 151              	.LCFI6:
 152              		.cfi_def_cfa_register 7
 220:../src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 153              		.loc 1 220 12
 154 0006 0023     		movs	r3, #0
 155 0008 3B61     		str	r3, [r7, #16]
 156              		.loc 1 220 21
 157 000a 0023     		movs	r3, #0
 158 000c 7B61     		str	r3, [r7, #20]
 159              		.loc 1 220 33
 160 000e 0223     		movs	r3, #2
 161 0010 FB60     		str	r3, [r7, #12]
 162              		.loc 1 220 43
 163 0012 0023     		movs	r3, #0
 164 0014 BB60     		str	r3, [r7, #8]
 165              		.loc 1 220 58
 166 0016 0223     		movs	r3, #2
 167 0018 7B60     		str	r3, [r7, #4]
 221:../src/system_stm32f4xx.c **** 
 222:../src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 223:../src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 168              		.loc 1 223 12
 169 001a 344B     		ldr	r3, .L12
 170 001c 9B68     		ldr	r3, [r3, #8]
 171              		.loc 1 223 7
 172 001e 03F00C03 		and	r3, r3, #12
 173 0022 3B61     		str	r3, [r7, #16]
 224:../src/system_stm32f4xx.c **** 
 225:../src/system_stm32f4xx.c ****   switch (tmp)
 174              		.loc 1 225 3
 175 0024 3B69     		ldr	r3, [r7, #16]
 176 0026 082B     		cmp	r3, #8
 177 0028 11D0     		beq	.L5
 178 002a 3B69     		ldr	r3, [r7, #16]
 179 002c 082B     		cmp	r3, #8
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 8


 180 002e 44D8     		bhi	.L6
 181 0030 3B69     		ldr	r3, [r7, #16]
 182 0032 002B     		cmp	r3, #0
 183 0034 03D0     		beq	.L7
 184 0036 3B69     		ldr	r3, [r7, #16]
 185 0038 042B     		cmp	r3, #4
 186 003a 04D0     		beq	.L8
 187 003c 3DE0     		b	.L6
 188              	.L7:
 226:../src/system_stm32f4xx.c ****   {
 227:../src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 228:../src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 189              		.loc 1 228 23
 190 003e 2C4B     		ldr	r3, .L12+4
 191 0040 2C4A     		ldr	r2, .L12+8
 192 0042 1A60     		str	r2, [r3]
 229:../src/system_stm32f4xx.c ****       break;
 193              		.loc 1 229 7
 194 0044 3DE0     		b	.L9
 195              	.L8:
 230:../src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 231:../src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 196              		.loc 1 231 23
 197 0046 2A4B     		ldr	r3, .L12+4
 198 0048 2B4A     		ldr	r2, .L12+12
 199 004a 1A60     		str	r2, [r3]
 232:../src/system_stm32f4xx.c ****       break;
 200              		.loc 1 232 7
 201 004c 39E0     		b	.L9
 202              	.L5:
 233:../src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 234:../src/system_stm32f4xx.c **** 
 235:../src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 236:../src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 237:../src/system_stm32f4xx.c ****          */
 238:../src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 203              		.loc 1 238 23
 204 004e 274B     		ldr	r3, .L12
 205 0050 5B68     		ldr	r3, [r3, #4]
 206              		.loc 1 238 55
 207 0052 9B0D     		lsrs	r3, r3, #22
 208              		.loc 1 238 17
 209 0054 03F00103 		and	r3, r3, #1
 210 0058 BB60     		str	r3, [r7, #8]
 239:../src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 211              		.loc 1 239 17
 212 005a 244B     		ldr	r3, .L12
 213 005c 5B68     		ldr	r3, [r3, #4]
 214              		.loc 1 239 12
 215 005e 03F03F03 		and	r3, r3, #63
 216 0062 7B60     		str	r3, [r7, #4]
 240:../src/system_stm32f4xx.c **** 
 241:../src/system_stm32f4xx.c ****       if (pllsource != 0)
 217              		.loc 1 241 10
 218 0064 BB68     		ldr	r3, [r7, #8]
 219 0066 002B     		cmp	r3, #0
 220 0068 0CD0     		beq	.L10
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 9


 242:../src/system_stm32f4xx.c ****       {
 243:../src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 244:../src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 221              		.loc 1 244 29
 222 006a 234A     		ldr	r2, .L12+12
 223 006c 7B68     		ldr	r3, [r7, #4]
 224 006e B2FBF3F3 		udiv	r3, r2, r3
 225              		.loc 1 244 44
 226 0072 1E4A     		ldr	r2, .L12
 227 0074 5268     		ldr	r2, [r2, #4]
 228              		.loc 1 244 74
 229 0076 9209     		lsrs	r2, r2, #6
 230 0078 C2F30802 		ubfx	r2, r2, #0, #9
 231              		.loc 1 244 16
 232 007c 02FB03F3 		mul	r3, r2, r3
 233 0080 7B61     		str	r3, [r7, #20]
 234 0082 0BE0     		b	.L11
 235              	.L10:
 245:../src/system_stm32f4xx.c ****       }
 246:../src/system_stm32f4xx.c ****       else
 247:../src/system_stm32f4xx.c ****       {
 248:../src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 249:../src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 236              		.loc 1 249 29
 237 0084 1B4A     		ldr	r2, .L12+8
 238 0086 7B68     		ldr	r3, [r7, #4]
 239 0088 B2FBF3F3 		udiv	r3, r2, r3
 240              		.loc 1 249 44
 241 008c 174A     		ldr	r2, .L12
 242 008e 5268     		ldr	r2, [r2, #4]
 243              		.loc 1 249 74
 244 0090 9209     		lsrs	r2, r2, #6
 245 0092 C2F30802 		ubfx	r2, r2, #0, #9
 246              		.loc 1 249 16
 247 0096 02FB03F3 		mul	r3, r2, r3
 248 009a 7B61     		str	r3, [r7, #20]
 249              	.L11:
 250:../src/system_stm32f4xx.c ****       }
 251:../src/system_stm32f4xx.c **** 
 252:../src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 250              		.loc 1 252 20
 251 009c 134B     		ldr	r3, .L12
 252 009e 5B68     		ldr	r3, [r3, #4]
 253              		.loc 1 252 50
 254 00a0 1B0C     		lsrs	r3, r3, #16
 255 00a2 03F00303 		and	r3, r3, #3
 256              		.loc 1 252 56
 257 00a6 0133     		adds	r3, r3, #1
 258              		.loc 1 252 12
 259 00a8 5B00     		lsls	r3, r3, #1
 260 00aa FB60     		str	r3, [r7, #12]
 253:../src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 261              		.loc 1 253 31
 262 00ac 7A69     		ldr	r2, [r7, #20]
 263 00ae FB68     		ldr	r3, [r7, #12]
 264 00b0 B2FBF3F3 		udiv	r3, r2, r3
 265              		.loc 1 253 23
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 10


 266 00b4 0E4A     		ldr	r2, .L12+4
 267 00b6 1360     		str	r3, [r2]
 254:../src/system_stm32f4xx.c ****       break;
 268              		.loc 1 254 7
 269 00b8 03E0     		b	.L9
 270              	.L6:
 255:../src/system_stm32f4xx.c ****     default:
 256:../src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 271              		.loc 1 256 23
 272 00ba 0D4B     		ldr	r3, .L12+4
 273 00bc 0D4A     		ldr	r2, .L12+8
 274 00be 1A60     		str	r2, [r3]
 257:../src/system_stm32f4xx.c ****       break;
 275              		.loc 1 257 7
 276 00c0 00BF     		nop
 277              	.L9:
 258:../src/system_stm32f4xx.c ****   }
 259:../src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 260:../src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 261:../src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 278              		.loc 1 261 28
 279 00c2 0A4B     		ldr	r3, .L12
 280 00c4 9B68     		ldr	r3, [r3, #8]
 281              		.loc 1 261 52
 282 00c6 1B09     		lsrs	r3, r3, #4
 283 00c8 03F00F03 		and	r3, r3, #15
 284              		.loc 1 261 22
 285 00cc 0B4A     		ldr	r2, .L12+16
 286 00ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 287              		.loc 1 261 7
 288 00d0 3B61     		str	r3, [r7, #16]
 262:../src/system_stm32f4xx.c ****   /* HCLK frequency */
 263:../src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 289              		.loc 1 263 19
 290 00d2 074B     		ldr	r3, .L12+4
 291 00d4 1A68     		ldr	r2, [r3]
 292 00d6 3B69     		ldr	r3, [r7, #16]
 293 00d8 22FA03F3 		lsr	r3, r2, r3
 294 00dc 044A     		ldr	r2, .L12+4
 295 00de 1360     		str	r3, [r2]
 264:../src/system_stm32f4xx.c **** }
 296              		.loc 1 264 1
 297 00e0 00BF     		nop
 298 00e2 1C37     		adds	r7, r7, #28
 299              	.LCFI7:
 300              		.cfi_def_cfa_offset 4
 301 00e4 BD46     		mov	sp, r7
 302              	.LCFI8:
 303              		.cfi_def_cfa_register 13
 304              		@ sp needed
 305 00e6 5DF8047B 		ldr	r7, [sp], #4
 306              	.LCFI9:
 307              		.cfi_restore 7
 308              		.cfi_def_cfa_offset 0
 309 00ea 7047     		bx	lr
 310              	.L13:
 311              		.align	2
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 11


 312              	.L12:
 313 00ec 00380240 		.word	1073887232
 314 00f0 00000000 		.word	SystemCoreClock
 315 00f4 0024F400 		.word	16000000
 316 00f8 00127A00 		.word	8000000
 317 00fc 00000000 		.word	AHBPrescTable
 318              		.cfi_endproc
 319              	.LFE131:
 321              		.text
 322              	.Letext0:
 323              		.file 2 "/usr/local/Caskroom/gcc-arm-embedded/9-2020-q2-update/gcc-arm-none-eabi-9-2020-q2-update/
 324              		.file 3 "/usr/local/Caskroom/gcc-arm-embedded/9-2020-q2-update/gcc-arm-none-eabi-9-2020-q2-update/
 325              		.file 4 "../../../../dependencies/stm/STM32F4_Cube/Drivers/CMSIS/Include/core_cm4.h"
 326              		.file 5 "../../../../dependencies/stm/STM32F4_Cube/Drivers/CMSIS/Device/ST/STM32F4xx/Include/syste
 327              		.file 6 "../../../../dependencies/stm/STM32F4_Cube/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32
 328              		.file 7 "../../../../dependencies/stm/STM32F4_Cube/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:22     .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:19     .data.SystemCoreClock:0000000000000000 $d
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:29     .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:26     .rodata.AHBPrescTable:0000000000000000 $d
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:37     .rodata.APBPrescTable:0000000000000000 APBPrescTable
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:34     .rodata.APBPrescTable:0000000000000000 $d
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:40     .text.SystemInit:0000000000000000 $t
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:48     .text.SystemInit:0000000000000000 SystemInit
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:122    .text.SystemInit:0000000000000060 $d
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:129    .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:136    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s:313    .text.SystemCoreClockUpdate:00000000000000ec $d
                           .group:0000000000000000 wm4.0.ec2406cbd31d56f71e0243dbf4ad4862
                           .group:0000000000000000 wm4.stm32f4xx.h.39.1b09cc4be5834e402f47d342f5416be4
                           .group:0000000000000000 wm4.stm32f412zx.h.35.d9913ab15c3cc42510cd85c75dd3c4eb
                           .group:0000000000000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.f42444deefab66ffa141b9b9fddb57a3
                           .group:0000000000000000 wm4.core_cm4.h.174.059a5e001a9e729091d1407208e93224
                           .group:0000000000000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:0000000000000000 wm4.stm32f412zx.h.838.7f7dacbfe2e2c88ca5202f260290d6c1
                           .group:0000000000000000 wm4.stm32f4xx.h.196.23c4e4a5d465a121178374b8f4182f7c
                           .group:0000000000000000 wm4.stm32f4xx_hal_conf.h.2.af8b2ca6b03807d43d9ddf9698d1361c
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.394d12941f5a0482dbe3c36ee9e57b2b
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32f4xx_hal_def.h.58.2d2c85d5b9693a63e90566b806e8a752
                           .group:0000000000000000 wm4.stm32f4xx_hal_rcc_ex.h.22.fe15f7aa872c0ff0051d1df0fdd88661
                           .group:0000000000000000 wm4.stm32f4xx_hal_rcc.h.108.0c18a3cfc2dd91bdf92470b4bd0ea1b5
                           .group:0000000000000000 wm4.stm32f4xx_hal_exti.h.22.b6735b42221f61fdbfd800fa51550a85
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio.h.22.be2c6bcf9722096ea8f49a41bf6aa50c
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio_ex.h.22.5fac61f4372beb17c6941adb263493e1
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio.h.264.978ac12eab1d3b3400b35b8c427e2c33
                           .group:0000000000000000 wm4.stm32f4xx_hal_dma.h.22.fffce20ac9119c50557659c75e75ab1c
                           .group:0000000000000000 wm4.stm32f4xx_hal_dma.h.721.a1e57ffbc615f926e6509c5acc65e492
                           .group:0000000000000000 wm4.stm32f4xx_hal_cortex.h.22.e6aa3b847b5388be63c32d1f9e696ef7
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash.h.22.31b301be2655c3eb8583e51c8231544a
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash_ex.h.22.5016bda819f6a480c96be63516c36ab2
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash.h.363.51efdf0f6c88f683efb89d7cc95cc1be
                           .group:0000000000000000 wm4.stm32f4xx_ll_fsmc.h.22.ed2b494a9a7d206deda6c53e626a4601
                           .group:0000000000000000 wm4.stm32f4xx_hal_i2c.h.22.7a518225417837eb3d0550cc95fa0a57
                           .group:0000000000000000 wm4.stm32f4xx_hal_i2c_ex.h.22.a90c9435159b7eaef7dc679da6295e14
                           .group:0000000000000000 wm4.stm32f4xx_hal_i2c.h.644.9d0aaa0659558fa97b5b5ac32630da6a
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr.h.22.2c27d93ae187efe3a73816f03a329970
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr_ex.h.22.a735ba4f49c5b2574a98d58f3b7ae925
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr.h.337.60b43975c84527a23cb6994b23165a5e
                           .group:0000000000000000 wm4.stm32f4xx_hal_spi.h.22.bc4a13b7a7ee3429db720a8d37eb1e5e
                           .group:0000000000000000 wm4.stm32f4xx_hal_tim.h.22.9c16860ec2cc7f3d941608a8f521bc4a
                           .group:0000000000000000 wm4.stm32f4xx_hal_tim_ex.h.22.2fde471485fd197eebc7c86251149c11
                           .group:0000000000000000 wm4.stm32f4xx_hal_uart.h.22.1edfd0da9670bd23245390d2a3da576d
ARM GAS  /var/folders/kj/yzqgq53j3dg15vgwwwwgf5s00000gn/T//cccPmdKO.s 			page 13


                           .group:0000000000000000 wm4.stm32f4xx_hal.h.72.a5a58188aa461a0614f1e58e159c7840

NO UNDEFINED SYMBOLS
